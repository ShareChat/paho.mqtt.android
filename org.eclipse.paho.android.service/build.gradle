import org.w3c.dom.Node

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 31

        testApplicationId "org.eclipse.paho.android.service.test"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        preDexLibraries = false
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    maven { url rootProject.ext.mavenUrl }
}

configurations.implementation.setCanBeResolved(true)
configurations.api.setCanBeResolved(true)

configurations {
    //androidTestImplementation.exclude module: 'org.eclipse.paho.client.mqttv3'
}

dependencies {
    implementation "com.android.support:support-v4:${rootProject.ext.supportLibVersion}"
    implementation "in.mohalla.paho:in.mohalla.paho.client.mqttv3:1.3.0"
}

android.libraryVariants.all { variant ->
}

// Generate Sources Jar
task("generateSourcesJar", type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// Copy the Paho Java client into the libs directory to bundle it with the AAR
task("copyLibs", type: Copy) {
    println "Copying MQTT Jar into libs directory"
    from configurations.implementation
    into 'libs'
    include 'org.eclipse.paho*'
}

// Renames the Release AAR file to a maven convention
task("renameReleaseAAR", type: Copy) {
    from("$buildDir/outputs/aar")
    into("$buildDir/outputs/aar/")
    include('org.eclipse.paho.android.service-debug.aar')
    rename('org.eclipse.paho.android.service-debug.aar', rootProject.ext.serviceArchivesBaseName + '-' + rootProject.ext.serviceVersion + '.aar')
}

// Generate Plain Jar Version of library (good for legacy users)
task("generateLibraryJar", type: Jar) {
    from("$buildDir/intermediates/classes/release")
}

// Generate Javadoc
task("generateJavaDocJar", type: Jar){
    from("$buildDir/docs/javadoc")
    classifier = 'javadoc'
}

publishing {
    publications {
        paho(MavenPublication) {
            groupId rootProject.ext.group
            artifactId rootProject.ext.serviceArchivesBaseName
            artifact "$buildDir/outputs/aar/" + rootProject.ext.serviceArchivesBaseName + "-" + rootProject.ext.serviceVersion + ".aar"
        }
    }

    repositories {
        maven {
            name = "ShareChatPackages"
            url = uri("https://maven.pkg.github.com/ShareChat/paho.mqtt.android")
            credentials {
                username = System.getenv("GITHUB_USERNAME") ?: "${guser}"
                password = System.getenv("GITHUB_PACKAGE_KEY") ?: "${gtoken}"
            }
        }
    }
}

clean.dependsOn('copyLibs')
assemble.dependsOn('renameReleaseAAR')
